<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>🍑网站 on 沫子</title>
    <link>https://morz.cc/posts/technology/web/</link>
    <description>Recent content in 🍑网站 on 沫子</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Fri, 06 Oct 2023 10:24:36 +0800</lastBuildDate><atom:link href="https://morz.cc/posts/technology/web/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>gpg小记</title>
      <link>https://morz.cc/posts/technology/web/gpg-tips/</link>
      <pubDate>Fri, 06 Oct 2023 10:24:36 +0800</pubDate>
      
      <guid>https://morz.cc/posts/technology/web/gpg-tips/</guid>
      <description>从公钥服务器接收失败 命令：
1 apt-key adv --keyserver keyserver.ubuntu.com --recv xxxx 错误提示：
gpg: keyserver receive failed: Server indicated a failure
gpg: 从公钥服务器接收失败：Server indicated a failure
解决方案
由于keyserver.ubuntu.com开放80端口，需要手动指定，否则会使用默认端口11371 添加协议名和端口后为： 1 apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv xxxx 如果方案1中继续报错，可能是由于域名解析失败导致，可以在/etc/resolv.conf中修改dns配置为 1 nameserver 8.8.8.8 # Google DNS 或 1 nameserver 1.1.1.1 # Cloudflare 如果不可修改DNS或者修改后依旧失败，则可以使用ping来获取keyserver.ubuntu.com的真实IP，再替换到域名 1 2 ping keyserver.ubuntu.com #获取ip，我获取的是 185.125.188.27 apt-key adv --keyserver hkp://185.125.188.27:80 --recv xxxx #使用IP替换域名 </description>
    </item>
    
    <item>
      <title>整合前端（umi）到后端（spring-boot）中</title>
      <link>https://morz.cc/posts/technology/web/all-in-one/</link>
      <pubDate>Fri, 04 Aug 2023 10:50:34 +0800</pubDate>
      
      <guid>https://morz.cc/posts/technology/web/all-in-one/</guid>
      <description>背景 toB业务，最终交付的是一个客户端，需要提供前端控制页面，需要将前端也进行编译打包到同一个zip中，并且需要兼容jenkins，一步打包到位。
原理 由于使用umi开发前端，所以正式使用之前先得进行编译。需要使用maven触发编译，打包为zip需要使用assembly插件
再将js文件打包进行项目目录，由于是直接使用，没有nginx的容器， 需要spring-web充当容器，对前端资源进行转发。同时，spring-web也提供后端接口。
实现 原理可行，开始实现
目录结构 项目目录结构基于Maven项目，前端文件放哪都行，只要后面路径配置得一直就没啥问题。
主要目录结构如下：
bin &amp;hellip;启动脚本 config &amp;hellip;配置 assembly assembly.xml react(前端代码) src main &amp;hellip;其他文件 resources public &amp;hellip;其他文件 target pom.xml 配置 1. 修改umi配置输出目录 修改配置文件.umirc.ts， 添加配置项 outputPath: &#39;../src/main/resources/public/&#39;
1 2 3 4 5 // .umirc.ts export default defineConfig({ // 其他配置 outputPath: &amp;#39;../src/main/resources/public/&amp;#39;, }); 2. 修改maven配置文件 添加react编译插件，用于编译umi项目 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;com.</description>
    </item>
    
  </channel>
</rss>
